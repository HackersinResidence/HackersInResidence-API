# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-07-08 04:10
from __future__ import unicode_literals

import HIR.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=HIR.models.organization_directory_path)),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(blank=True, help_text="What is being offered. as a slug Ex 'Travel expenses' becomes travel_expenses'", max_length=80, null=True)),
                ('label', models.CharField(blank=True, help_text="What is being offered. Readable prompt Ex 'Travel Expenses'", max_length=80, null=True)),
                ('summary', models.CharField(blank=True, help_text='One line summary of what is being offered', max_length=80, null=True)),
                ('notes', models.TextField(blank=True, help_text='Full description of what is being offered', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of your organization', max_length=200)),
                ('website', models.CharField(blank=True, max_length=100, null=True)),
                ('street_address', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(blank=True, max_length=30, null=True)),
                ('state', models.CharField(blank=True, help_text='Where applicable', max_length=30, null=True)),
                ('postal_code', models.CharField(blank=True, help_text='Where applicable', max_length=30, null=True)),
                ('country', models.CharField(choices=[(b'AD', b'Andorra'), (b'AE', b'United Arab Emirates'), (b'AF', b'Afghanistan'), (b'AG', b'Antigua & Barbuda'), (b'AI', b'Anguilla'), (b'AL', b'Albania'), (b'AM', b'Armenia'), (b'AN', b'Netherlands Antilles'), (b'AO', b'Angola'), (b'AQ', b'Antarctica'), (b'AR', b'Argentina'), (b'AS', b'American Samoa'), (b'AT', b'Austria'), (b'AU', b'Australia'), (b'AW', b'Aruba'), (b'AZ', b'Azerbaijan'), (b'BA', b'Bosnia and Herzegovina'), (b'BB', b'Barbados'), (b'BD', b'Bangladesh'), (b'BE', b'Belgium'), (b'BF', b'Burkina Faso'), (b'BG', b'Bulgaria'), (b'BH', b'Bahrain'), (b'BI', b'Burundi'), (b'BJ', b'Benin'), (b'BM', b'Bermuda'), (b'BN', b'Brunei Darussalam'), (b'BO', b'Bolivia'), (b'BR', b'Brazil'), (b'BS', b'Bahama'), (b'BT', b'Bhutan'), (b'BV', b'Bouvet Island'), (b'BW', b'Botswana'), (b'BY', b'Belarus'), (b'BZ', b'Belize'), (b'CA', b'Canada'), (b'CC', b'Cocos (Keeling) Islands'), (b'CF', b'Central African Republic'), (b'CG', b'Congo'), (b'CH', b'Switzerland'), (b'CI', b'Ivory Coast'), (b'CK', b'Cook Iislands'), (b'CL', b'Chile'), (b'CM', b'Cameroon'), (b'CN', b'China'), (b'CO', b'Colombia'), (b'CR', b'Costa Rica'), (b'CU', b'Cuba'), (b'CV', b'Cape Verde'), (b'CX', b'Christmas Island'), (b'CY', b'Cyprus'), (b'CZ', b'Czech Republic'), (b'DE', b'Germany'), (b'DJ', b'Djibouti'), (b'DK', b'Denmark'), (b'DM', b'Dominica'), (b'DO', b'Dominican Republic'), (b'DZ', b'Algeria'), (b'EC', b'Ecuador'), (b'EE', b'Estonia'), (b'EG', b'Egypt'), (b'EH', b'Western Sahara'), (b'ER', b'Eritrea'), (b'ES', b'Spain'), (b'ET', b'Ethiopia'), (b'FI', b'Finland'), (b'FJ', b'Fiji'), (b'FK', b'Falkland Islands (Malvinas)'), (b'FM', b'Micronesia'), (b'FO', b'Faroe Islands'), (b'FR', b'France'), (b'FX', b'France, Metropolitan'), (b'GA', b'Gabon'), (b'GB', b'United Kingdom (Great Britain)'), (b'GD', b'Grenada'), (b'GE', b'Georgia'), (b'GF', b'French Guiana'), (b'GH', b'Ghana'), (b'GI', b'Gibraltar'), (b'GL', b'Greenland'), (b'GM', b'Gambia'), (b'GN', b'Guinea'), (b'GP', b'Guadeloupe'), (b'GQ', b'Equatorial Guinea'), (b'GR', b'Greece'), (b'GS', b'South Georgia and the South Sandwich Islands'), (b'GT', b'Guatemala'), (b'GU', b'Guam'), (b'GW', b'Guinea-Bissau'), (b'GY', b'Guyana'), (b'HK', b'Hong Kong'), (b'HM', b'Heard & McDonald Islands'), (b'HN', b'Honduras'), (b'HR', b'Croatia'), (b'HT', b'Haiti'), (b'HU', b'Hungary'), (b'ID', b'Indonesia'), (b'IE', b'Ireland'), (b'IL', b'Israel'), (b'IN', b'India'), (b'IO', b'British Indian Ocean Territory'), (b'IQ', b'Iraq'), (b'IR', b'Islamic Republic of Iran'), (b'IS', b'Iceland'), (b'IT', b'Italy'), (b'JM', b'Jamaica'), (b'JO', b'Jordan'), (b'JP', b'Japan'), (b'KE', b'Kenya'), (b'KG', b'Kyrgyzstan'), (b'KH', b'Cambodia'), (b'KI', b'Kiribati'), (b'KM', b'Comoros'), (b'KN', b'St. Kitts and Nevis'), (b'KP', b"Korea, Democratic People's Republic of"), (b'KR', b'Korea, Republic of'), (b'KW', b'Kuwait'), (b'KY', b'Cayman Islands'), (b'KZ', b'Kazakhstan'), (b'LA', b"Lao People's Democratic Republic"), (b'LB', b'Lebanon'), (b'LC', b'Saint Lucia'), (b'LI', b'Liechtenstein'), (b'LK', b'Sri Lanka'), (b'LR', b'Liberia'), (b'LS', b'Lesotho'), (b'LT', b'Lithuania'), (b'LU', b'Luxembourg'), (b'LV', b'Latvia'), (b'LY', b'Libyan Arab Jamahiriya'), (b'MA', b'Morocco'), (b'MC', b'Monaco'), (b'MD', b'Moldova, Republic of'), (b'MG', b'Madagascar'), (b'MH', b'Marshall Islands'), (b'ML', b'Mali'), (b'MN', b'Mongolia'), (b'MM', b'Myanmar'), (b'MO', b'Macau'), (b'MP', b'Northern Mariana Islands'), (b'MQ', b'Martinique'), (b'MR', b'Mauritania'), (b'MS', b'Monserrat'), (b'MT', b'Malta'), (b'MU', b'Mauritius'), (b'MV', b'Maldives'), (b'MW', b'Malawi'), (b'MX', b'Mexico'), (b'MY', b'Malaysia'), (b'MZ', b'Mozambique'), (b'NA', b'Namibia'), (b'NC', b'New Caledonia'), (b'NE', b'Niger'), (b'NF', b'Norfolk Island'), (b'NG', b'Nigeria'), (b'NI', b'Nicaragua'), (b'NL', b'Netherlands'), (b'NO', b'Norway'), (b'NP', b'Nepal'), (b'NR', b'Nauru'), (b'NU', b'Niue'), (b'NZ', b'New Zealand'), (b'OM', b'Oman'), (b'PA', b'Panama'), (b'PE', b'Peru'), (b'PF', b'French Polynesia'), (b'PG', b'Papua New Guinea'), (b'PH', b'Philippines'), (b'PK', b'Pakistan'), (b'PL', b'Poland'), (b'PM', b'St. Pierre & Miquelon'), (b'PN', b'Pitcairn'), (b'PR', b'Puerto Rico'), (b'PT', b'Portugal'), (b'PW', b'Palau'), (b'PY', b'Paraguay'), (b'QA', b'Qatar'), (b'RE', b'Reunion'), (b'RO', b'Romania'), (b'RU', b'Russian Federation'), (b'RW', b'Rwanda'), (b'SA', b'Saudi Arabia'), (b'SB', b'Solomon Islands'), (b'SC', b'Seychelles'), (b'SD', b'Sudan'), (b'SE', b'Sweden'), (b'SG', b'Singapore'), (b'SH', b'St. Helena'), (b'SI', b'Slovenia'), (b'SJ', b'Svalbard & Jan Mayen Islands'), (b'SK', b'Slovakia'), (b'SL', b'Sierra Leone'), (b'SM', b'San Marino'), (b'SN', b'Senegal'), (b'SO', b'Somalia'), (b'SR', b'Suriname'), (b'ST', b'Sao Tome & Principe'), (b'SV', b'El Salvador'), (b'SY', b'Syrian Arab Republic'), (b'SZ', b'Swaziland'), (b'TC', b'Turks & Caicos Islands'), (b'TD', b'Chad'), (b'TF', b'French Southern Territories'), (b'TG', b'Togo'), (b'TH', b'Thailand'), (b'TJ', b'Tajikistan'), (b'TK', b'Tokelau'), (b'TM', b'Turkmenistan'), (b'TN', b'Tunisia'), (b'TO', b'Tonga'), (b'TP', b'East Timor'), (b'TR', b'Turkey'), (b'TT', b'Trinidad & Tobago'), (b'TV', b'Tuvalu'), (b'TW', b'Taiwan, Province of China'), (b'TZ', b'Tanzania, United Republic of'), (b'UA', b'Ukraine'), (b'UG', b'Uganda'), (b'UM', b'United States Minor Outlying Islands'), (b'US', b'United States of America'), (b'UY', b'Uruguay'), (b'UZ', b'Uzbekistan'), (b'VA', b'Vatican City State (Holy See)'), (b'VC', b'St. Vincent & the Grenadines'), (b'VE', b'Venezuela'), (b'VG', b'British Virgin Islands'), (b'VI', b'United States Virgin Islands'), (b'VN', b'Viet Nam'), (b'VU', b'Vanuatu'), (b'WF', b'Wallis & Futuna Islands'), (b'WS', b'Samoa'), (b'YE', b'Yemen'), (b'YT', b'Mayotte'), (b'YU', b'Yugoslavia'), (b'ZA', b'South Africa'), (b'ZM', b'Zambia'), (b'ZR', b'Zaire'), (b'ZW', b'Zimbabwe'), (b'ZZ', b'Unknown or unspecified country')], default='ZZ', max_length=1)),
                ('email', models.CharField(help_text='A contact email for Residency issues', max_length=30)),
                ('phone', models.CharField(blank=True, help_text='optional', max_length=30, null=True)),
                ('about', models.TextField(blank=True, help_text='Tell us about your fine space!', null=True)),
                ('logo', models.ImageField(upload_to=HIR.models.organization_directory_path)),
                ('slug', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Required',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(blank=True, help_text="What is required as a slug Ex 'Give a Talk(s)' becomes 'give_a_talk' ", max_length=80, null=True)),
                ('label', models.CharField(blank=True, help_text="What is required. Readable prompt Ex 'Give a Talk(s)'", max_length=80, null=True)),
                ('summary', models.CharField(blank=True, help_text='One line summary of what is required', max_length=80, null=True)),
                ('notes', models.TextField(blank=True, help_text='Full description of what is required', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Residency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('about', models.TextField(blank=True, null=True)),
                ('approved', models.BooleanField(default=None)),
                ('application_instructions', models.TextField(blank=True, null=True)),
                ('offer_travel_check', models.BooleanField(default=None)),
                ('offer_travel_detail', models.CharField(blank=True, max_length=120, null=True)),
                ('offer_housing_check', models.BooleanField(default=None)),
                ('offer_housing_detail', models.CharField(blank=True, max_length=120, null=True)),
                ('offer_food_check', models.BooleanField(default=None)),
                ('offer_food_detail', models.CharField(blank=True, max_length=120, null=True)),
                ('offer_stipend_check', models.BooleanField(default=None)),
                ('offer_stipend_detail', models.CharField(blank=True, max_length=120, null=True)),
                ('offer_studio_check', models.BooleanField(default=None)),
                ('offer_studio_detail', models.CharField(blank=True, max_length=120, null=True)),
                ('offer_tools_check', models.BooleanField(default=None)),
                ('offer_tools_detail', models.CharField(blank=True, max_length=120, null=True)),
                ('offer_additional_detail', models.TextField(blank=True, null=True)),
                ('require_language', models.CharField(blank=True, max_length=120, null=True)),
                ('require_start_date', models.DateField(blank=True, help_text='Earliest date the residency can start', null=True)),
                ('require_end_date', models.DateField(blank=True, help_text='Latest date the residency can end', null=True)),
                ('require_minimum_stay', models.CharField(blank=True, help_text='Minimum required length of stay', max_length=120, null=True)),
                ('require_maximum_stay', models.CharField(blank=True, help_text='Maximum required length of stay', max_length=120, null=True)),
                ('require_date_detail', models.TextField(blank=True, null=True)),
                ('require_mentoring_check', models.BooleanField(default=None)),
                ('require_mentoring_detail', models.CharField(blank=True, max_length=120, null=True)),
                ('require_talk_check', models.BooleanField(default=None)),
                ('require_talk_detail', models.CharField(blank=True, max_length=120, null=True)),
                ('require_workshop_check', models.BooleanField(default=None)),
                ('require_workshop_detail', models.CharField(blank=True, max_length=120, null=True)),
                ('require_presentation_check', models.BooleanField(default=None)),
                ('require_presentation_detail', models.CharField(blank=True, max_length=120, null=True)),
                ('require_class_check', models.BooleanField(default=None)),
                ('require_class_detail', models.CharField(blank=True, max_length=120, null=True)),
                ('require_hackathon_check', models.BooleanField(default=None)),
                ('require_hackathon_detail', models.CharField(blank=True, max_length=120, null=True)),
                ('require_other_requirements', models.TextField(blank=True, null=True)),
                ('slug', models.CharField(blank=True, max_length=100, null=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HIR.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HIR.Organization')),
            ],
        ),
        migrations.AddField(
            model_name='required',
            name='residence',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HIR.Residency'),
        ),
        migrations.AddField(
            model_name='offer',
            name='residence',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HIR.Residency'),
        ),
        migrations.AddField(
            model_name='image',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HIR.Organization'),
        ),
    ]
